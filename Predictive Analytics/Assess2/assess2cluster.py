# -*- coding: utf-8 -*-
"""assess2cluster.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11uu4h_jX2Ky6nlqanIfrxTqt9L1bZ96k
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder,MinMaxScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

df=pd.read_csv('/content/Mall_Customers.csv')

df.head()

df.info()

df.describe()

for column in df.select_dtypes(include = ['int64','float64']).columns:
  plt.figure(figsize=(8,5))
  sns.histplot(df[column])
  plt.title(f"Histogram of {column}")
  plt.xlabel(column)
  plt.ylabel("frequency")

# handle missing values
df.isnull().sum()

df['Annual Income (k$)']=df['Annual Income (k$)'].fillna(df['Annual Income (k$)'].median())

df.isnull().sum()

df.duplicated().sum()

df=df.drop_duplicates()

import matplotlib.pyplot as plt
plt.boxplot(df['Age'])
plt.show()

plt.boxplot(df['Annual Income (k$)'])
plt.show()

df= df[df['Annual Income (k$)']<130]
plt.boxplot(df['Annual Income (k$)'])
plt.show()

df.dtypes

le = LabelEncoder()
df['Gender'] = le.fit_transform(df['Gender'])

df.head()

sse = []
k_rng = range(1,10)
for k in k_rng:
    km = KMeans(n_clusters=k)
    km.fit(df[['Age','Annual Income (k$)']])
    sse.append(km.inertia_)

plt.xlabel('K')
plt.ylabel('Sum of squared error')
plt.plot(k_rng,sse)

km = KMeans(n_clusters=4)
y_pred = km.fit_predict(df[['CustomerID', 'Gender', 'Age', 'Annual Income (k$)','Spending Score (1-100)']])
df['Cluster']=y_pred
print(km.cluster_centers_)

df1=df[df.Cluster==0]
df2=df[df.Cluster==1]
df3=df[df.Cluster==2]
df4=df[df.Cluster==3]
plt.scatter(df1.Age,df1['Spending Score (1-100)'],color='green')
plt.scatter(df2.Age,df2['Spending Score (1-100)'],color='red')
plt.scatter(df3.Age,df3['Spending Score (1-100)'],color='black')
plt.scatter(df4.Age,df4['Spending Score (1-100)'],color='blue')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='purple',marker='*',label='centroid')
plt.xlabel('Age')
plt.ylabel('Spending Score (1-100)')
plt.legend()

sc=silhouette_score(df,y_pred)
print(sc)