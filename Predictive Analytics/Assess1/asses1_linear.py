# -*- coding: utf-8 -*-
"""Asses1-Linear.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IS5I-_uJngTQ1tOC-yaWLYUf9Mm77WoG
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_absolute_error,mean_squared_error

df=pd.read_csv('/content/expenses.csv')

df.head()

df.shape

df.dtypes

#handle missing values
df.isnull().sum()

med = df['bmi'].median()

df['bmi'].fillna(med,inplace=True)

df.isnull().sum()

# handle duplicates
df.duplicated().sum()

df.drop_duplicates(inplace=True)

df.duplicated().sum()

# handle outliers
sns.boxplot(df['bmi'])

sns.boxplot(df['age'])

sns.boxplot(df['charges'])

bmi_count = df[df['charges']>47].count()

print(bmi_count)

charge_count = df[df['charges']>40000].count()

print(charge_count)

charges_outliers = sns.boxplot(df['charges'])
print(df[df['charges']>40000].count())

# categorical encoding

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()
df['sex'] = le.fit_transform(df['sex'])
df['smoker'] = le.fit_transform(df['smoker'])
df['region'] = le.fit_transform(df['region'])

df

cor = df.corr()

cor
# all features are important, as all have correlation so no feature is removed

sns.heatmap(cor,annot=True)

df.columns

# splitting of data
X= df[['age', 'sex', 'bmi', 'children', 'smoker', 'region']]
y = df['charges']

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)

#feature scaling
from sklearn.preprocessing import MinMaxScaler
sc =MinMaxScaler()

X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

lr = LinearRegression()
lr.fit(X_train,y_train)

y_pred = lr.predict(X_test)

r2 = r2_score(y_test,y_pred)
mse = mean_squared_error(y_test,y_pred)
mae = mean_absolute_error(y_test,y_pred)

print(r2)
print(mse)
print(mae)

plt.scatter(y_test,y_pred)
plt.scatter(y_test,y_test)